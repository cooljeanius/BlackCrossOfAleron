#textdomain wesnoth-celmin-bcoa

#define ENTHRALL_FILTER CONDITION
    formula="
		enemy_of(self, other) and other.loc in circle and matches
	where
		circle = adjacent_locs(loc),
		matches = (" + {CONDITION} + ") and not other.canrecruit
	"
    [filter_dominator]
        ability_type_active=dominate
    [/filter_dominator]
#enddef

#define DOMINATE_EVENTS
    [event]
        name=new turn
        id=domination_release
        first_time_only=no
        delayed_variable_substitution=yes
        [dethrall_units]
            [not]
                [filter_adjacent]
                    ability=dominate
                    is_enemy=no
                [/filter_adjacent]
            [/not]
        [/dethrall_units]
    [/event]
    [event]
        name=pre advance
        id=domination_escape
        first_time_only=no
        [filter]
            status=dominated
        [/filter]
        [dethrall_units]
            id=$unit.id
        [/dethrall_units]
    [/event]
    [event]
        name=attack
        id=domination_plague_offense
        first_time_only=no
        [filter]
            status=dominated
        [/filter]
        [filter_attack]
            special_type_active=plague
        [/filter_attack]
        [set_variables]
            name=dominated_plague_unit_attacking
            to_variable=unit
        [/set_variables]
    [/event]
    [event]
        name=attack
        id=domination_plague_defense
        first_time_only=no
        [filter_second]
            status=dominated
        [/filter_second]
        [filter_second_attack]
            special_type_active=plague
        [/filter_second_attack]
        [set_variables]
            name=dominated_plague_unit_attacking
            to_variable=second_unit
        [/set_variables]
    [/event]
    [event]
        name=unit placed
        id=domination_plague
        first_time_only=no
        [filter]
            [filter_adjacent]
                id=$dominated_plague_unit_attacking.id
            [/filter_adjacent]
        [/filter]
        [enthrall_units]
            x,y=$x1,$y1
            animate=no
            old_side=$dominated_plague_unit_attacking.variables.was_side
            new_side=$dominated_plague_unit_attacking.side
        [/enthrall_units]
        {CLEAR_VARIABLE dominated_plague_unit_attacking}
    [/event]
    [event]
        name=new turn
        id=domination_capture
        first_time_only=no
        delayed_variable_substitution=yes
        [enthrall_units]
            {ENTHRALL_FILTER "level <= other.level - 2"}
        [/enthrall_units]
        [enthrall_units]
            {ENTHRALL_FILTER "level = other.level - 1"}
            chance=25
        [/enthrall_units]
        [enthrall_units]
            {ENTHRALL_FILTER "level = other.level"}
            chance=5
        [/enthrall_units]
        [enthrall_units]
            {ENTHRALL_FILTER "level > other.level"}
            chance=0
        [/enthrall_units]
    [/event]
    [event]
        name=victory
        id=domination_dismiss
        first_time_only=no
        [filter_condition]
            [have_unit]
                status=dominated
            [/have_unit]
        [/filter_condition]
        [if]
            [have_unit]
                id=hermitsorceress
            [/have_unit]
            [then]
                [message]
                    speaker=chiefdruid
                    message=_"Surely you do not to plan to keep those creatures in your thrall?"
                [/message]
                [message]
                    speaker=hermitsorceress
                    message=_"And why not? I won them fairly."
                [/message]
                [message]
                    speaker=chiefdruid
                    message=_"I cannot approve. Release them."
                [/message]
                [message]
                    speaker=hermitsorceress
                    message=_"Oh fine."
                [/message]
            [/then]
        [/if]
        [kill]
            animate=no
            status=dominated
        [/kill]
        {CLEAR_VARIABLE dominated_plague_unit_attacking}
    [/event]
#enddef
